
{% set server = salt['grains.filter_by']({
    'Debian': {
        'pkgs': ['keystone', 'python-keystone', 'python-keystoneclient', 'python-psycopg2', 'python-mysqldb', 'python-six', 'python-memcache', 'python-openstackclient'],
        'service_name': 'keystone',
        'version': 'icehouse',
        'api_version': '2',
        'tokens': {
          'engine': 'database',
          'expiration': '86400'
        },
        'notification': False,
        'roles': ['admin', 'Member']
    },
    'RedHat': {
        'pkgs': ['openstack-keystone', 'openstack-utils', 'python-keystone', 'python-keystoneclient'],
        'service_name': 'openstack-keystone',
        'api_version': '2',
        'version': 'icehouse',
        'tokens': {
          'engine': 'database',
          'expiration': '86400'
        },
        'notification': False,
        'roles': ['admin', 'Member']
    },
}, merge=salt['pillar.get']('keystone:server')) %}

{% set client = salt['grains.filter_by']({
    'Debian': {
        'pkgs': ['python-keystoneclient', 'python-openstackclient'],
        'service': 'keystone',
        'roles': ['admin', 'Member'],
    },
    'RedHat': {
        'pkgs': ['python-keystoneclient'],
        'roles': ['admin', 'Member'],
    },
}, merge=salt['pillar.get']('keystone:client')) %}

{% set control = salt['grains.filter_by']({
    'Debian': {
        'pkgs': [],
    },
    'RedHat': {
        'pkgs': [],
    },
}, merge=salt['pillar.get']('keystone:control')) %}


{% set keystone_settings = {} %}

{% if pillar.get('keystone', {}).get('server', {'enabled': False } ).enabled %}
   {% do keystone_settings.update({'token': pillar.keystone.server.service_token,
			'endpoint': 'http://' ~ pillar.keystone.server.bind.private_address ~ ':' ~ pillar.keystone.server.bind.private_port ~ '/v2.0'
			 }) 
   %}
{%- elif pillar.get('keystone', {}).get('client', {'enabled': False } ).enabled %}
{%- if pillar.keystone.client.server.service_token is defined %}
    {% do keystone_settings.update({'token': pillar.keystone.client.server.service_token,
			'endpoint': 'http://' ~ pillar.keystone.client.server.host ~ ':' ~ pillar.keystone.client.server.private_port ~ '/v2.0'
		 	}) 
    %}
{%- else %}
    {% do keystone_settings.update({'user': pillar.keystone.client.server.user,
			'password': pillar.keystone.client.server.password,
			'tenant': pillar.keystone.client.server.tenant,
			'auth_url': 'http://' ~ pillar.keystone.client.server.host ~ ':' ~ pillar.keystone.client.server.public_port ~ '/v2.0/'
		 	}) 
    %}
{%- endif %}
{%- endif %}

